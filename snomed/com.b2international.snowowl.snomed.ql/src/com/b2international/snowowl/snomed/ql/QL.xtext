/*
 * Copyright 2019 B2i Healthcare Pte Ltd, http://b2i.sg
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
grammar com.b2international.snowowl.snomed.ql.QL with com.b2international.snowowl.snomed.ecl.Ecl

generate ql "http://www.b2international.com/snowowl/snomed/QL"
import 'http://www.eclipse.org/emf/2002/Ecore' as ecore

Query:
	{Query} (ecl=ExpressionConstraint)? (OPEN_DOUBLE_BRACES constraint=Constraint CLOSE_DOUBLE_BRACES)?;

Constraint:
	Disjunction;

Disjunction returns Constraint:
	Conjunction ({Disjunction.left=current} 'OR' right=Conjunction)*;

Conjunction returns Constraint:
	Exclusion ({Conjunction.left=current} ('AND' | ',') right=Exclusion)*;

Exclusion returns Constraint:
	Filter ({Exclusion.left=current} 'MINUS' right=Filter)?;

NestedFilter:
	ROUND_OPEN constraint=Constraint ROUND_CLOSE;

Filter:
	ActiveFilter | TermFilter | PreferredInFilter | AcceptableInFilter | LanguageRefSetFilter | TypeFilter | ModuleFilter
	| NestedFilter;

ActiveFilter:
	(domain=Domain DOT)? 'active' EQUAL (active=Boolean);

ModuleFilter:
	(domain=Domain DOT)? 'moduleId' EQUAL moduleId=ExpressionConstraint;

TermFilter:
	'term' EQUAL (lexicalSearchType=LexicalSearchType COLON)? term=STRING;

PreferredInFilter:
	'preferredIn' EQUAL languageRefSetId=ExpressionConstraint;

AcceptableInFilter:
	'acceptableIn' EQUAL languageRefSetId=ExpressionConstraint;

LanguageRefSetFilter:
	'languageRefSet' EQUAL languageRefSetId=ExpressionConstraint;

TypeFilter:
	'typeId' EQUAL (type=ExpressionConstraint);

enum LexicalSearchType:
	MATCH="match" | REGEX="regex" | EXACT="exact";

enum Domain:
	CONCEPT="Concept" | DESCRIPTION="Description";

Boolean returns ecore::EBoolean:
	'true' | 'false'; 

terminal OPEN_DOUBLE_BRACES:
	'{{';

terminal CLOSE_DOUBLE_BRACES:
	'}}';
