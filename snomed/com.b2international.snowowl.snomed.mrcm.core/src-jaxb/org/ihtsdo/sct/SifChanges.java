/*
 * Copyright 2011-2015 B2i Healthcare Pte Ltd, http://b2i.sg
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *///
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.03.01 at 10:42:55 AM CET 
//


package org.ihtsdo.sct;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * Complext type that represents as set of changes that must be applied as a
 * single unit. If applying any of the changes creates a conflict that conflict
 * must be resolved before any of the changes in the transaction are applied.
 * 
 * <p>Java class for SifChanges complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SifChanges">
 *   &lt;complexContent>
 *     &lt;extension base="{urn:ihtsdo-org/sct}SifChangeBase">
 *       &lt;sequence>
 *         &lt;element name="comment" type="{urn:ihtsdo-org/sct}CommentMarkup" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="author" type="{urn:ihtsdo-org/sct}SifAuthor" minOccurs="0"/>
 *         &lt;element name="change" type="{urn:ihtsdo-org/sct}SifChange" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SifChanges", propOrder = {
    "comment",
    "author",
    "change"
})
public class SifChanges
    extends SifChangeBase
{

    protected List<CommentMarkup> comment;
    protected SifAuthor author;
    @XmlElement(required = true)
    protected List<SifChange> change;

    /**
     * Gets the value of the comment property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the comment property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getComment().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CommentMarkup }
     * 
     * 
     */
    public List<CommentMarkup> getComment() {
        if (comment == null) {
            comment = new ArrayList<CommentMarkup>();
        }
        return this.comment;
    }

    /**
     * Gets the value of the author property.
     * 
     * @return
     *     possible object is
     *     {@link SifAuthor }
     *     
     */
    public SifAuthor getAuthor() {
        return author;
    }

    /**
     * Sets the value of the author property.
     * 
     * @param value
     *     allowed object is
     *     {@link SifAuthor }
     *     
     */
    public void setAuthor(SifAuthor value) {
        this.author = value;
    }

    /**
     * Gets the value of the change property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the change property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getChange().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SifChange }
     * 
     * 
     */
    public List<SifChange> getChange() {
        if (change == null) {
            change = new ArrayList<SifChange>();
        }
        return this.change;
    }

}